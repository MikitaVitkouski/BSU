using NUnit.Framework;

namespace BinaryRepresentation.Tasks
{
    [TestFixture]
    public class BitsManipulationTests
    {
        [TestCase(12, ExpectedResult = "0000000000000000000000000000000000000000000000000000000000001100")]
        [TestCase(-12, ExpectedResult = "1111111111111111111111111111111111111111111111111111111111110100")]
        [TestCase(long.MaxValue, ExpectedResult = "0111111111111111111111111111111111111111111111111111111111111111")]
        [TestCase(long.MinValue, ExpectedResult = "1000000000000000000000000000000000000000000000000000000000000000")]
        [TestCase(0, ExpectedResult = "0000000000000000000000000000000000000000000000000000000000000000")]
        [TestCase(-0, ExpectedResult = "0000000000000000000000000000000000000000000000000000000000000000")]
        [TestCase(-675433, ExpectedResult = "1111111111111111111111111111111111111111111101011011000110010111")]
        [TestCase(1087785542111225456, ExpectedResult = "0000111100011000100101110010111111101101010110000110011001110000")]
        public string GetMemoryDumpOf_Tests(long number) => BitsManipulation.GetMemoryDumpOf(number);
    }
}
